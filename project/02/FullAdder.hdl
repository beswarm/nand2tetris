// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/02/FullAdder.hdl

/**
 * Full adder. Computes sum, the least significant bit of 
 * a + b + c, and carry, the most significant bit of a + b + c.
 * 1. Understand the meaning of LSB and MSB. Image it represents the money you have
 *    which bit do your care more?
 * 2. Why full adder? because when you add , you have to deal with carry bit besides.
 *    half adder do not deal with it. 
 * 3. there are two kinds of full adder implementations. Ripple-Carry Adderï¼ŒRCA and Carry-Lookahead Adder CLA
 */

CHIP FullAdder {
    IN a, b, c;  // 1-bit inputs
    OUT sum,     // Right bit of a + b + c
        carry;   // Left bit of a + b + c

    PARTS:
    // Put your code here.
    HalfAdder(a=b,b=c,sum=sum1,carry=carry1);
    HalfAdder(a=sum1,b=a,sum=sum,carry=carry2);
    Or(a=carry2,b=carry1,out=carry);
    
    
}
